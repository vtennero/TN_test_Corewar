==96320== Memcheck, a memory error detector
==96320== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==96320== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==96320== Command: ./VM_tests/corewar VM_tests/valid_champions/youforkmytralala.cor
==96320== Parent PID: 95670
==96320== 
==96320== Syscall param msg->desc.port.name points to uninitialised byte(s)
==96320==    at 0x1003B434A: mach_msg_trap (in /usr/lib/system/libsystem_kernel.dylib)
==96320==    by 0x1003B3796: mach_msg (in /usr/lib/system/libsystem_kernel.dylib)
==96320==    by 0x1003AD485: task_set_special_port (in /usr/lib/system/libsystem_kernel.dylib)
==96320==    by 0x10054910E: _os_trace_create_debug_control_port (in /usr/lib/system/libsystem_trace.dylib)
==96320==    by 0x100549458: _libtrace_init (in /usr/lib/system/libsystem_trace.dylib)
==96320==    by 0x1000B29DF: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==96320==    by 0x100022A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==96320==    by 0x100022C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==96320==    by 0x10001E4A9: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==96320==    by 0x10001E440: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==96320==    by 0x10001D523: ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==96320==    by 0x10001D5B8: ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) (in /usr/lib/dyld)
==96320==  Address 0x104895cec is on thread 1's stack
==96320==  in frame #2, created by task_set_special_port (???:)
==96320== 
==96320== Conditional jump or move depends on uninitialised value(s)
==96320==    at 0x100000FCA: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320== 
==96320== Conditional jump or move depends on uninitialised value(s)
==96320==    at 0x10000102F: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320== 
==96320== Conditional jump or move depends on uninitialised value(s)
==96320==    at 0x10000104B: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320== 
==96320== Conditional jump or move depends on uninitialised value(s)
==96320==    at 0x100001594: rang (in ./VM_tests/corewar)
==96320==    by 0x100002F5B: f_fork (in ./VM_tests/corewar)
==96320==    by 0x100001AA8: exec4 (in ./VM_tests/corewar)
==96320==    by 0x1000019B9: exec3 (in ./VM_tests/corewar)
==96320==    by 0x10000188D: exec2 (in ./VM_tests/corewar)
==96320==    by 0x100001E00: exec (in ./VM_tests/corewar)
==96320==    by 0x100000FEA: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320== 
==96320== Conditional jump or move depends on uninitialised value(s)
==96320==    at 0x100001594: rang (in ./VM_tests/corewar)
==96320==    by 0x100001ECC: exec (in ./VM_tests/corewar)
==96320==    by 0x100000FEA: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320== 
==96320== Conditional jump or move depends on uninitialised value(s)
==96320==    at 0x100001635: rang (in ./VM_tests/corewar)
==96320==    by 0x100001ECC: exec (in ./VM_tests/corewar)
==96320==    by 0x100000FEA: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320== 
==96320== Invalid write of size 1
==96320==    at 0x100005CB3: ft_memcpy (in ./VM_tests/corewar)
==96320==    by 0x1000023C0: st (in ./VM_tests/corewar)
==96320==    by 0x100001BDC: exec5 (in ./VM_tests/corewar)
==96320==    by 0x100001ADC: exec4 (in ./VM_tests/corewar)
==96320==    by 0x1000019B9: exec3 (in ./VM_tests/corewar)
==96320==    by 0x10000188D: exec2 (in ./VM_tests/corewar)
==96320==    by 0x100001E00: exec (in ./VM_tests/corewar)
==96320==    by 0x100000FEA: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320==  Address 0x100b675f7 is 25 bytes before a block of size 4,096 in arena "client"
==96320== 
==96320== Conditional jump or move depends on uninitialised value(s)
==96320==    at 0x1000031F7: zjump (in ./VM_tests/corewar)
==96320==    by 0x100001988: exec3 (in ./VM_tests/corewar)
==96320==    by 0x10000188D: exec2 (in ./VM_tests/corewar)
==96320==    by 0x100001E00: exec (in ./VM_tests/corewar)
==96320==    by 0x100000FEA: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320== 
==96320== Invalid read of size 4
==96320==    at 0x1000014EB: set_carry (in ./VM_tests/corewar)
==96320==    by 0x1000023EB: st (in ./VM_tests/corewar)
==96320==    by 0x100001BDC: exec5 (in ./VM_tests/corewar)
==96320==    by 0x100001ADC: exec4 (in ./VM_tests/corewar)
==96320==    by 0x1000019B9: exec3 (in ./VM_tests/corewar)
==96320==    by 0x10000188D: exec2 (in ./VM_tests/corewar)
==96320==    by 0x100001E00: exec (in ./VM_tests/corewar)
==96320==    by 0x100000FEA: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320==  Address 0x8650 is not stack'd, malloc'd or (recently) free'd
==96320== 
==96320== 
==96320== Process terminating with default action of signal 11 (SIGSEGV)
==96320==  Access not within mapped region at address 0x8650
==96320==    at 0x1000014EB: set_carry (in ./VM_tests/corewar)
==96320==    by 0x1000023EB: st (in ./VM_tests/corewar)
==96320==    by 0x100001BDC: exec5 (in ./VM_tests/corewar)
==96320==    by 0x100001ADC: exec4 (in ./VM_tests/corewar)
==96320==    by 0x1000019B9: exec3 (in ./VM_tests/corewar)
==96320==    by 0x10000188D: exec2 (in ./VM_tests/corewar)
==96320==    by 0x100001E00: exec (in ./VM_tests/corewar)
==96320==    by 0x100000FEA: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320==  If you believe this happened as a result of a stack
==96320==  overflow in your program's main thread (unlikely but
==96320==  possible), you can try to increase the size of the
==96320==  main thread stack using the --main-stacksize= flag.
==96320==  The main thread stack size used in this run was 8388608.
==96320== 
==96320== HEAP SUMMARY:
==96320==     in use at exit: 26,863 bytes in 165 blocks
==96320==   total heap usage: 181 allocs, 16 frees, 33,007 bytes allocated
==96320== 
==96320== 72 bytes in 3 blocks are possibly lost in loss record 26 of 45
==96320==    at 0x1000A40B2: calloc (in /Users/vtennero/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==96320==    by 0x1005BD832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==96320==    by 0x1005D0D6A: map_images (in /usr/lib/libobjc.A.dylib)
==96320==    by 0x10001203B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==96320==    by 0x100012255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==96320==    by 0x10020B00A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==96320==    by 0x1005BD072: _objc_init (in /usr/lib/libobjc.A.dylib)
==96320==    by 0x10019E68D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==96320==    by 0x10019E63A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==96320==    by 0x1000B29D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==96320==    by 0x100022A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==96320==    by 0x100022C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==96320== 
==96320== 2,304 bytes in 1 blocks are definitely lost in loss record 41 of 45
==96320==    at 0x1000A3A46: malloc (in /Users/vtennero/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==96320==    by 0x100002E57: f_fork (in ./VM_tests/corewar)
==96320==    by 0x100001AA8: exec4 (in ./VM_tests/corewar)
==96320==    by 0x1000019B9: exec3 (in ./VM_tests/corewar)
==96320==    by 0x10000188D: exec2 (in ./VM_tests/corewar)
==96320==    by 0x100001E00: exec (in ./VM_tests/corewar)
==96320==    by 0x100000FEA: crawler (in ./VM_tests/corewar)
==96320==    by 0x10000144B: main (in ./VM_tests/corewar)
==96320== 
==96320== LEAK SUMMARY:
==96320==    definitely lost: 2,304 bytes in 1 blocks
==96320==    indirectly lost: 0 bytes in 0 blocks
==96320==      possibly lost: 72 bytes in 3 blocks
==96320==    still reachable: 6,600 bytes in 8 blocks
==96320==         suppressed: 17,887 bytes in 153 blocks
==96320== Reachable blocks (those to which a pointer was found) are not shown.
==96320== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==96320== 
==96320== For counts of detected and suppressed errors, rerun with: -v
==96320== Use --track-origins=yes to see where uninitialised values come from
==96320== ERROR SUMMARY: 1115 errors from 12 contexts (suppressed: 12 from 12)
