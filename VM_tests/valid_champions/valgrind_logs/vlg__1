==29444== Memcheck, a memory error detector
==29444== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==29444== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==29444== Command: ./VM_tests/corewar VM_tests/valid_champions/Asombra.cor
==29444== Parent PID: 28998
==29444== 
--29444-- run: /usr/bin/dsymutil "./VM_tests/corewar"
==29444== Syscall param msg->desc.port.name points to uninitialised byte(s)
==29444==    at 0x1003FB34A: mach_msg_trap (in /usr/lib/system/libsystem_kernel.dylib)
==29444==    by 0x1003FA796: mach_msg (in /usr/lib/system/libsystem_kernel.dylib)
==29444==    by 0x1003F4485: task_set_special_port (in /usr/lib/system/libsystem_kernel.dylib)
==29444==    by 0x10059010E: _os_trace_create_debug_control_port (in /usr/lib/system/libsystem_trace.dylib)
==29444==    by 0x100590458: _libtrace_init (in /usr/lib/system/libsystem_trace.dylib)
==29444==    by 0x1000F99DF: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==29444==    by 0x100027A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==29444==    by 0x100027C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==29444==    by 0x1000234A9: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==29444==    by 0x100023440: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==29444==    by 0x100022523: ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==29444==    by 0x1000225B8: ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) (in /usr/lib/dyld)
==29444==  Address 0x10489ad2c is on thread 1's stack
==29444==  in frame #2, created by task_set_special_port (???:)
==29444== 
==29444== Conditional jump or move depends on uninitialised value(s)
==29444==    at 0x10000545B: check_get_registry (in ./VM_tests/corewar)
==29444==    by 0x100005ED8: ldi (in ./VM_tests/corewar)
==29444==    by 0x10000441C: do_instruction2 (in ./VM_tests/corewar)
==29444==    by 0x100004690: do_instruction (in ./VM_tests/corewar)
==29444==    by 0x100004790: run_processes (in ./VM_tests/corewar)
==29444==    by 0x10000491A: run_cycle (in ./VM_tests/corewar)
==29444==    by 0x100001A38: main (in ./VM_tests/corewar)
==29444== 
==29444== Conditional jump or move depends on uninitialised value(s)
==29444==    at 0x10000546D: check_get_registry (in ./VM_tests/corewar)
==29444==    by 0x100005ED8: ldi (in ./VM_tests/corewar)
==29444==    by 0x10000441C: do_instruction2 (in ./VM_tests/corewar)
==29444==    by 0x100004690: do_instruction (in ./VM_tests/corewar)
==29444==    by 0x100004790: run_processes (in ./VM_tests/corewar)
==29444==    by 0x10000491A: run_cycle (in ./VM_tests/corewar)
==29444==    by 0x100001A38: main (in ./VM_tests/corewar)
==29444== 
==29444== Use of uninitialised value of size 8
==29444==    at 0x10000554D: read_mem (in ./VM_tests/corewar)
==29444==    by 0x100005F3A: ldi (in ./VM_tests/corewar)
==29444==    by 0x10000441C: do_instruction2 (in ./VM_tests/corewar)
==29444==    by 0x100004690: do_instruction (in ./VM_tests/corewar)
==29444==    by 0x100004790: run_processes (in ./VM_tests/corewar)
==29444==    by 0x10000491A: run_cycle (in ./VM_tests/corewar)
==29444==    by 0x100001A38: main (in ./VM_tests/corewar)
==29444== 
==29444== Use of uninitialised value of size 8
==29444==    at 0x100005F5F: ldi (in ./VM_tests/corewar)
==29444==    by 0x10000441C: do_instruction2 (in ./VM_tests/corewar)
==29444==    by 0x100004690: do_instruction (in ./VM_tests/corewar)
==29444==    by 0x100004790: run_processes (in ./VM_tests/corewar)
==29444==    by 0x10000491A: run_cycle (in ./VM_tests/corewar)
==29444==    by 0x100001A38: main (in ./VM_tests/corewar)
==29444== 
==29444== 
==29444== HEAP SUMMARY:
==29444==     in use at exit: 18,183 bytes in 163 blocks
==29444==   total heap usage: 135,923 allocs, 135,760 frees, 372,400 bytes allocated
==29444== 
==29444== 72 bytes in 3 blocks are possibly lost in loss record 27 of 43
==29444==    at 0x1000A90B2: calloc (in /Users/vtennero/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==29444==    by 0x100604832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==29444==    by 0x100617D6A: map_images (in /usr/lib/libobjc.A.dylib)
==29444==    by 0x10001703B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==29444==    by 0x100017255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==29444==    by 0x10025200A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==29444==    by 0x100604072: _objc_init (in /usr/lib/libobjc.A.dylib)
==29444==    by 0x1001E568D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==29444==    by 0x1001E563A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==29444==    by 0x1000F99D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==29444==    by 0x100027A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==29444==    by 0x100027C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==29444== 
==29444== LEAK SUMMARY:
==29444==    definitely lost: 0 bytes in 0 blocks
==29444==    indirectly lost: 0 bytes in 0 blocks
==29444==      possibly lost: 72 bytes in 3 blocks
==29444==    still reachable: 200 bytes in 6 blocks
==29444==         suppressed: 17,911 bytes in 154 blocks
==29444== Reachable blocks (those to which a pointer was found) are not shown.
==29444== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29444== 
==29444== For counts of detected and suppressed errors, rerun with: -v
==29444== Use --track-origins=yes to see where uninitialised values come from
==29444== ERROR SUMMARY: 9 errors from 6 contexts (suppressed: 13 from 13)
