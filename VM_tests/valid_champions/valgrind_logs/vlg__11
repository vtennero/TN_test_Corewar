==64986== Memcheck, a memory error detector
==64986== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==64986== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==64986== Command: ./VM_tests/corewar VM_tests/valid_champions/Varimathras.cor
==64986== Parent PID: 64262
==64986== 
==64986== Syscall param msg->desc.port.name points to uninitialised byte(s)
==64986==    at 0x1003B734A: mach_msg_trap (in /usr/lib/system/libsystem_kernel.dylib)
==64986==    by 0x1003B6796: mach_msg (in /usr/lib/system/libsystem_kernel.dylib)
==64986==    by 0x1003B0485: task_set_special_port (in /usr/lib/system/libsystem_kernel.dylib)
==64986==    by 0x10054C10E: _os_trace_create_debug_control_port (in /usr/lib/system/libsystem_trace.dylib)
==64986==    by 0x10054C458: _libtrace_init (in /usr/lib/system/libsystem_trace.dylib)
==64986==    by 0x1000B59DF: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==64986==    by 0x100025A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==64986==    by 0x100025C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==64986==    by 0x1000214A9: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==64986==    by 0x100021440: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==64986==    by 0x100020523: ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==64986==    by 0x1000205B8: ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) (in /usr/lib/dyld)
==64986==  Address 0x104898d2c is on thread 1's stack
==64986==  in frame #2, created by task_set_special_port (???:)
==64986== 
==64986== Conditional jump or move depends on uninitialised value(s)
==64986==    at 0x100000C8A: crawler (in ./VM_tests/corewar)
==64986==    by 0x100001020: main (in ./VM_tests/corewar)
==64986== 
==64986== Conditional jump or move depends on uninitialised value(s)
==64986==    at 0x100000CEF: crawler (in ./VM_tests/corewar)
==64986==    by 0x100001020: main (in ./VM_tests/corewar)
==64986== 
==64986== Conditional jump or move depends on uninitialised value(s)
==64986==    at 0x100000D0B: crawler (in ./VM_tests/corewar)
==64986==    by 0x100001020: main (in ./VM_tests/corewar)
==64986== 
==64986== Invalid read of size 1
==64986==    at 0x10000134C: get_int (in ./VM_tests/corewar)
==64986==    by 0x1000036C2: xor (in ./VM_tests/corewar)
==64986==    by 0x100001544: exec3 (in ./VM_tests/corewar)
==64986==    by 0x10000149D: exec2 (in ./VM_tests/corewar)
==64986==    by 0x100001A10: exec (in ./VM_tests/corewar)
==64986==    by 0x100000CAA: crawler (in ./VM_tests/corewar)
==64986==    by 0x100001020: main (in ./VM_tests/corewar)
==64986==  Address 0x104c6af90 is not stack'd, malloc'd or (recently) free'd
==64986== 
==64986== 
==64986== Process terminating with default action of signal 11 (SIGSEGV)
==64986==  Access not within mapped region at address 0x104C6AF90
==64986==    at 0x10000134C: get_int (in ./VM_tests/corewar)
==64986==    by 0x1000036C2: xor (in ./VM_tests/corewar)
==64986==    by 0x100001544: exec3 (in ./VM_tests/corewar)
==64986==    by 0x10000149D: exec2 (in ./VM_tests/corewar)
==64986==    by 0x100001A10: exec (in ./VM_tests/corewar)
==64986==    by 0x100000CAA: crawler (in ./VM_tests/corewar)
==64986==    by 0x100001020: main (in ./VM_tests/corewar)
==64986==  If you believe this happened as a result of a stack
==64986==  overflow in your program's main thread (unlikely but
==64986==  possible), you can try to increase the size of the
==64986==  main thread stack using the --main-stacksize= flag.
==64986==  The main thread stack size used in this run was 8388608.
==64986== 
==64986== HEAP SUMMARY:
==64986==     in use at exit: 24,571 bytes in 165 blocks
==64986==   total heap usage: 183 allocs, 18 frees, 30,739 bytes allocated
==64986== 
==64986== 72 bytes in 3 blocks are possibly lost in loss record 27 of 45
==64986==    at 0x1000A70B2: calloc (in /Users/vtennero/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==64986==    by 0x1005C0832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==64986==    by 0x1005D3D6A: map_images (in /usr/lib/libobjc.A.dylib)
==64986==    by 0x10001503B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==64986==    by 0x100015255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==64986==    by 0x10020E00A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==64986==    by 0x1005C0072: _objc_init (in /usr/lib/libobjc.A.dylib)
==64986==    by 0x1001A168D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==64986==    by 0x1001A163A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==64986==    by 0x1000B59D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==64986==    by 0x100025A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==64986==    by 0x100025C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==64986== 
==64986== LEAK SUMMARY:
==64986==    definitely lost: 0 bytes in 0 blocks
==64986==    indirectly lost: 0 bytes in 0 blocks
==64986==      possibly lost: 72 bytes in 3 blocks
==64986==    still reachable: 6,612 bytes in 9 blocks
==64986==         suppressed: 17,887 bytes in 153 blocks
==64986== Reachable blocks (those to which a pointer was found) are not shown.
==64986== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==64986== 
==64986== For counts of detected and suppressed errors, rerun with: -v
==64986== Use --track-origins=yes to see where uninitialised values come from
==64986== ERROR SUMMARY: 438 errors from 6 contexts (suppressed: 12 from 12)
