==83832== Memcheck, a memory error detector
==83832== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==83832== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==83832== Command: ./VM_tests/corewar -n 1 VM_tests/valid_champions/Car.cor -n 1 VM_tests/valid_champions/Car.cor
==83832== Parent PID: 83590
==83832== 
==83832== Syscall param msg->desc.port.name points to uninitialised byte(s)
==83832==    at 0x1003B234A: mach_msg_trap (in /usr/lib/system/libsystem_kernel.dylib)
==83832==    by 0x1003B1796: mach_msg (in /usr/lib/system/libsystem_kernel.dylib)
==83832==    by 0x1003AB485: task_set_special_port (in /usr/lib/system/libsystem_kernel.dylib)
==83832==    by 0x10054710E: _os_trace_create_debug_control_port (in /usr/lib/system/libsystem_trace.dylib)
==83832==    by 0x100547458: _libtrace_init (in /usr/lib/system/libsystem_trace.dylib)
==83832==    by 0x1000B09DF: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==83832==    by 0x100020A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==83832==    by 0x100020C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==83832==    by 0x10001C4A9: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==83832==    by 0x10001C440: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==83832==    by 0x10001B523: ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==83832==    by 0x10001B5B8: ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) (in /usr/lib/dyld)
==83832==  Address 0x104893cec is on thread 1's stack
==83832==  in frame #2, created by task_set_special_port (???:)
==83832== 
==83832== Invalid write of size 1
==83832==    at 0x100001B00: ft_b_strjoin (in ./VM_tests/corewar)
==83832==    by 0x10000123F: get_file (in ./VM_tests/corewar)
==83832==    by 0x1000013F2: init_player (in ./VM_tests/corewar)
==83832==    by 0x1000015A4: init_players (in ./VM_tests/corewar)
==83832==    by 0x100000BFF: init_params (in ./VM_tests/corewar)
==83832==    by 0x100000AEA: main (in ./VM_tests/corewar)
==83832==  Address 0x100b65bd0 is 0 bytes after a block of size 2,208 alloc'd
==83832==    at 0x1000A1A46: malloc (in /Users/vtennero/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==83832==    by 0x100001A5D: ft_b_strjoin (in ./VM_tests/corewar)
==83832==    by 0x10000123F: get_file (in ./VM_tests/corewar)
==83832==    by 0x1000013F2: init_player (in ./VM_tests/corewar)
==83832==    by 0x1000015A4: init_players (in ./VM_tests/corewar)
==83832==    by 0x100000BFF: init_params (in ./VM_tests/corewar)
==83832==    by 0x100000AEA: main (in ./VM_tests/corewar)
==83832== 
==83832== Conditional jump or move depends on uninitialised value(s)
==83832==    at 0x100001F80: ft_b_strncmp (in ./VM_tests/corewar)
==83832==    by 0x1000009D9: check_name_header (in ./VM_tests/corewar)
==83832==    by 0x100000FDF: fill_player (in ./VM_tests/corewar)
==83832==    by 0x100001440: init_player (in ./VM_tests/corewar)
==83832==    by 0x1000015A4: init_players (in ./VM_tests/corewar)
==83832==    by 0x100000BFF: init_params (in ./VM_tests/corewar)
==83832==    by 0x100000AEA: main (in ./VM_tests/corewar)
==83832== 
==83832== 
==83832== HEAP SUMMARY:
==83832==     in use at exit: 22,667 bytes in 170 blocks
==83832==   total heap usage: 195 allocs, 25 frees, 36,087 bytes allocated
==83832== 
==83832== 72 bytes in 3 blocks are possibly lost in loss record 28 of 47
==83832==    at 0x1000A20B2: calloc (in /Users/vtennero/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==83832==    by 0x1005BB832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==83832==    by 0x1005CED6A: map_images (in /usr/lib/libobjc.A.dylib)
==83832==    by 0x10001003B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==83832==    by 0x100010255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==83832==    by 0x10020900A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==83832==    by 0x1005BB072: _objc_init (in /usr/lib/libobjc.A.dylib)
==83832==    by 0x10019C68D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==83832==    by 0x10019C63A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==83832==    by 0x1000B09D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==83832==    by 0x100020A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==83832==    by 0x100020C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==83832== 
==83832== 4,508 (48 direct, 4,460 indirect) bytes in 1 blocks are definitely lost in loss record 47 of 47
==83832==    at 0x1000A1A46: malloc (in /Users/vtennero/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==83832==    by 0x100001375: init_player (in ./VM_tests/corewar)
==83832==    by 0x1000015A4: init_players (in ./VM_tests/corewar)
==83832==    by 0x100000BFF: init_params (in ./VM_tests/corewar)
==83832==    by 0x100000AEA: main (in ./VM_tests/corewar)
==83832== 
==83832== LEAK SUMMARY:
==83832==    definitely lost: 48 bytes in 1 blocks
==83832==    indirectly lost: 4,460 bytes in 7 blocks
==83832==      possibly lost: 72 bytes in 3 blocks
==83832==    still reachable: 200 bytes in 6 blocks
==83832==         suppressed: 17,887 bytes in 153 blocks
==83832== Reachable blocks (those to which a pointer was found) are not shown.
==83832== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==83832== 
==83832== For counts of detected and suppressed errors, rerun with: -v
==83832== Use --track-origins=yes to see where uninitialised values come from
==83832== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 12 from 12)
